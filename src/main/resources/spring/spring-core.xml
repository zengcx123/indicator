<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:soap="http://cxf.apache.org/bindings/soap"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
       http://cxf.apache.org/bindings/soap http://cxf.apache.org/schemas/configuration/soap.xsd">

    <context:property-placeholder location="classpath:properties/jdbc.properties"/>
    <context:annotation-config/>
    <!-- 自动扫描controller bean，把作了注解的类转换为bean -->
    <context:component-scan base-package="com.oceansoft" />
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

    <!--数据库连接-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${snd.jdbc.url}"/>
        <property name="username" value="${snd.jdbc.username}"/>
        <property name="password" value="${snd.jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize">
            <value>1</value>
        </property>
        <property name="maxActive">
            <value>5</value>
        </property>
        <property name="minIdle">
            <value>1</value>
        </property>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait">
            <value>60000</value>
        </property>
        <!-- 配置监控统计拦截的filters -->
        <property name="filters">
            <value>stat</value>
        </property>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis">
            <value>60000</value>
        </property>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis">
            <value>300000</value>
        </property>
    </bean>
    <!-- mybatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:spring/mybatis.xml"/>
        <!--自动扫描mybatis中的xml文件-->
        <property name="mapperLocations" value="classpath:com/oceansoft/persistence/mapper/*.xml"/>
    </bean>
    <!-- 扫描basePackage下所有以@Repository注解的接口-->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.oceansoft.persistence"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>
    <!--事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <context:component-scan base-package="com.oceansoft">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.oceansoft.persistence.mapper" />
    </bean>
</beans>